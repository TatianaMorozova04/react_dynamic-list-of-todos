{"version":3,"sources":["components/TodoList/TodoList.tsx","api/api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","state","title","todoList","todosStatus","handleChange","e","setState","target","value","filterTodosByTitle","filterTodosByStatus","filter","todo","toLowerCase","includes","completed","handleChangeTodos","changeTodosOrder","sort","Math","random","this","props","todoId","selectUser","filterTodos","className","type","placeholder","onChange","name","disabled","onClick","map","classnames","htmlFor","readOnly","checked","id","userId","nextProps","prevState","todos","React","Component","API_URL","getUser","fetch","then","response","json","CurrentUser","user","isLoaded","getUserFromServer","a","selectedUserId","prevProps","clearUser","email","phone","App","isLoading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ce42f0f.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectUser: (selectedUserId:number, todoId:number) => void;\n  todoId: number;\n};\n\ntype State = {\n  title: string;\n  todoList: Todo[];\n  todosStatus: string;\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    title: '',\n    todoList: [],\n    todosStatus: '',\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    if (prevState.todoList !== nextProps.todos) {\n      return {\n        todoList: nextProps.todos,\n      };\n    }\n\n    return null;\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ title: e.target.value });\n  };\n\n  filterTodosByTitle = () => {\n    const { title, todosStatus } = this.state;\n    const filteredByStatusTodos = this.filterTodosByStatus(todosStatus);\n\n    return (\n      filteredByStatusTodos.filter(todo => (\n        todo.title.toLowerCase().includes(title.toLowerCase())\n      ))\n    );\n  };\n\n  filterTodosByStatus = (value: string) => {\n    const { todoList } = this.state;\n\n    switch (value) {\n      case 'active':\n        return todoList.filter(todo => !todo.completed);\n      case 'completed':\n        return todoList.filter(todo => todo.completed);\n      default:\n        return todoList;\n    }\n  };\n\n  handleChangeTodos = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = e.target;\n\n    return this.setState({\n      todosStatus: value,\n    });\n  };\n\n  changeTodosOrder = () => {\n    this.setState((state) => ({\n      todoList: state.todoList.sort(() => Math.random() - 0.5),\n    }));\n  };\n\n  render() {\n    const { title, todosStatus } = this.state;\n    const { todoId, selectUser } = this.props;\n    const filterTodos: Todo[] = this.filterTodosByTitle();\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <div className=\"TodoList__status status\">\n          <input\n            type=\"text\"\n            placeholder=\"Filter the todos by title\"\n            value={title}\n            onChange={this.handleChange}\n            className=\"status__item\"\n          />\n          <select\n            name=\"todos\"\n            value={todosStatus}\n            onChange={this.handleChangeTodos}\n            className=\"status__item\"\n          >\n            <option value=\"\" disabled>Select todos</option>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n          <button\n            type=\"button\"\n            onClick={this.changeTodosOrder}\n            className=\"status__item status__button\"\n          >\n            Randomize\n          </button>\n        </div>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filterTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classnames(\n                  'TodoList__item', 'TodoList__item--checked', {\n                    'TodoList__item--unchecked': !todo.completed,\n                  },\n                )}\n              >\n                <label htmlFor=\"one\">\n                  <input type=\"checkbox\" readOnly checked={todo.completed} />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={classnames(\n                    'TodoList__user-button', 'button', {\n                      'TodoList__user-button--selected': todoId === todo.id,\n                    },\n                  )}\n                  type=\"button\"\n                  onClick={() => selectUser(todo.userId, todo.id)}\n                >\n                  {`User #${todo.id}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","const API_URL = 'https://mate.academy/students-api';\n\nexport function getTodos() {\n  return fetch(`${API_URL}/todos`)\n    .then(response => response.json());\n}\n\nexport function getUser(id: number) {\n  return fetch(`${API_URL}/users/${id}`)\n    .then(response => response.json());\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api/api';\n\ntype State = {\n  user: User | null;\n  isLoaded: boolean;\n};\n\ntype Props = {\n  selectedUserId: number;\n  clearUser: () => void;\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n    isLoaded: false,\n  };\n\n  async componentDidMount() {\n    await this.getUserFromServer();\n  }\n\n  async componentDidUpdate(prevProps: Readonly<Props>) {\n    const { selectedUserId } = this.props;\n\n    if (selectedUserId !== prevProps.selectedUserId) {\n      await this.getUserFromServer();\n    }\n  }\n\n  getUserFromServer = async () => {\n    try {\n      const { selectedUserId } = this.props;\n\n      this.setState({ isLoaded: false });\n      const user = await getUser(selectedUserId);\n\n      this.setState({\n        user,\n        isLoaded: true,\n      });\n    } catch (error) {\n      this.setState({ user: null });\n    }\n  };\n\n  render() {\n    const { user, isLoaded } = this.state;\n    const { clearUser } = this.props;\n\n    return (\n      <>\n        {isLoaded\n          ? (\n            <div className=\"CurrentUser\">\n              <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${user?.id}`}</span></h2>\n\n              <h3 className=\"CurrentUser__name\">{user?.name}</h3>\n              <p className=\"CurrentUser__email\">{user?.email}</p>\n              <p className=\"CurrentUser__phone\">{user?.phone}</p>\n              <button\n                type=\"button\"\n                onClick={clearUser}\n                className=\"CurrentUser__button\"\n              >\n                Clear\n              </button>\n            </div>\n          )\n          : <span>Is Loading...</span>}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\nimport { Todo } from './types/Todo';\n\ninterface State {\n  selectedUserId: number;\n  todos: Todo[];\n  todoId: number;\n  isLoading: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    todos: [],\n    todoId: 0,\n    isLoading: false,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({\n      todos,\n      isLoading: true,\n    });\n  }\n\n  selectUser = (selectedUserId: number, todoId: number) => {\n    this.setState({ selectedUserId, todoId });\n  };\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n      todoId: 0,\n    });\n  };\n\n  render() {\n    const {\n      selectedUserId,\n      todos,\n      todoId,\n      isLoading,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {isLoading\n            ? (\n              <TodoList\n                todos={todos}\n                todoId={todoId}\n                selectUser={this.selectUser}\n              />\n            )\n            : <span>Is Loading...</span>}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser selectedUserId={selectedUserId} clearUser={this.clearUser} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}